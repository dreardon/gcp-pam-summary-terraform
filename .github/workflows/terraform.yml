name: Terraform

on:
  push:
    branches: [ "*" ]
  pull_request:

env:
  TF_VAR_ORG_ID: ${{ vars.TF_VAR_ORG_ID }}
  TF_VAR_PROJECT_ID: ${{ vars.TF_VAR_PROJECT_ID }}
  TF_VAR_PROJECT_NUMBER: ${{ vars.TF_VAR_PROJECT_NUMBER }}
  TF_VAR_DEFAULT_REGION: ${{ vars.TF_VAR_DEFAULT_REGION }}
  TF_VAR_BACKEND_BUCKET: ${{ vars.TF_VAR_BACKEND_BUCKET }}
  TF_VAR_SUMMARY_RECIPIENT: ${{ vars.TF_VAR_SUMMARY_RECIPIENT }}

permissions:
  id-token: write 
  contents: read

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tflint-checks:
    name: 'tflint-checks'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/cache@v4
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v4
      name: Setup TFLint
      with:
        tflint_version: v0.57.0

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint -f compact --recursive 

    outputs:
      tflint-passed: true   

  checkov-checks:
      name: 'checkov-checks'
      runs-on: ubuntu-latest
      needs: tflint-checks
      if: ${{ needs.tflint-checks.outputs.tflint-passed == 'true' }}

      defaults:
        run:
          shell: bash

      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          output_format: cli,sarif
          output_file_path: console,results.sarif
          quiet: false
          soft_fail: true
          log_level: ERROR

      outputs:
        checkov-passed: true                  
  
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Authenticate with Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
          project_id: ${{ vars.TF_VAR_PROJECT_ID }}
          workload_identity_provider: 'projects/${{ vars.WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.WORKLOAD_IDENTITY_POOL }}/providers/${{ vars.WORKLOAD_IDENTITY_PROVIDER }}'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{ vars.TF_VAR_BACKEND_BUCKET }}"

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
