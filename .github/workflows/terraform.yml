name: Terraform

on:
  push:
    branches: [ "*" ]
  pull_request:

env:
  # WORKLOAD_IDENTITY_POOL: ${{ vars.WORKLOAD_IDENTITY_POOL }}
  # WORKLOAD_IDENTITY_PROVIDER: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
  # WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER: ${{ vars.WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER }}
  # WORKLOAD_IDENTITY_PROJECT_ID: ${{ vars.WORKLOAD_IDENTITY_PROJECT_ID }}
  TF_VAR_ORG_ID: ${{ vars.TF_VAR_ORG_ID }}
  TF_VAR_PROJECT_ID: ${{ vars.TF_VAR_PROJECT_ID }}
  TF_VAR_PROJECT_NUMBER: ${{ vars.TF_VAR_PROJECT_NUMBER }}
  TF_VAR_DEFAULT_REGION: ${{ vars.TF_VAR_DEFAULT_REGION }}
  TF_VAR_BACKEND_BUCKET: ${{ vars.TF_VAR_BACKEND_BUCKET }}
  TF_VAR_SUMMARY_RECIPIENT: ${{ vars.TF_VAR_SUMMARY_RECIPIENT }}

permissions:
  id-token: write 
  contents: read

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

          tflint-checks:
            name: 'tflint-checks'
            runs-on: ubuntu-latest
            environment: dev
        
            defaults:
              run:
                shell: bash
        
            steps:
            - name: Checkout
              uses: actions/checkout@v3
        
            - uses: actions/cache@v3
              name: Cache plugin dir
              with:
                path: ~/.tflint.d/plugins
                key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}
        
            - uses: terraform-linters/setup-tflint@v2
              name: Setup TFLint
              with:
                tflint_version: v0.57.0
              
            - name: Show version
              run: tflint --version
        
            - name: Init TFLint
              run: tflint --init
        
            - name: Run TFLint
              run: tflint -f compact --recursive 
            
            outputs:
              tflint-passed: true   
        
        # checkov-checks:
        #     name: 'checkov-checks'
        #     runs-on: ubuntu-latest
        #     needs: tflint-checks
        #     if: ${{ needs.tflint-checks.outputs.tflint-passed == 'true' }}
        
        #     defaults:
        #       run:
        #         shell: bash
        
        #     steps:
        #     - name: Checkout
        #       uses: actions/checkout@v3
        
        #     - name: Checkov GitHub Action
        #       uses: bridgecrewio/checkov-action@v12
        #       with:
        #         output_format: cli,sarif
        #         output_file_path: console,results.sarif
        #         quiet: false
        #         soft_fail: false
        #         log_level: ERROR
        
        #     # - name: Run Checkov
        #     #   run: |
        #     #         docker run --tty --rm -v ${{ github.workspace }}:/tf --workdir /tf bridgecrew/checkov --directory /tf --skip-check CKV_TF_1 --skip-check CKV_GCP_62 --skip-check CKV_GCP_114 --skip-check CKV_GCP_78
        
        #     outputs:
        #       checkov-passed: true                  
  
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Authenticate with Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
          project_id: ${{ vars.TF_VAR_PROJECT_ID }}
          workload_identity_provider: 'projects/${{ vars.WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.WORKLOAD_IDENTITY_POOL }}/providers/${{ vars.WORKLOAD_IDENTITY_PROVIDER }}'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{ vars.TF_VAR_BACKEND_BUCKET }}"

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
